#!/usr/bin/env ruby
# encoding: utf-8
require 'net/http'

module ChinaIdentify
  DATA = {
  	320101 => "南京市市辖区",
  	320102 => "南京市玄武区",
  	320103 => "南京市白下区",
  	320104 => "南京市秦淮区",
  	320105 => "南京市建邺区",
  	320106 => "南京市鼓楼区",
  	320107 => "南京市下关区",
  	320111 => "南京市浦口区",
  	320112 => "南京市大厂区",
  	320113 => "南京市栖霞区",
  	320114 => "南京市雨花台区",
  	320115 => "南京市江宁区",
  	320116 => "南京市六合区",
  	320120 => "南京市市区",
  	320121 => "南京市江宁县",
  	320122 => "南京市江浦县",
  	320123 => "南京市六合县",
  	320124 => "南京市溧水县",
  	320125 => "南京市高淳县",
  	320126 => "南京市江都县",
  	320201 => "无锡市市辖区",
  	320202 => "无锡市崇安区",
  	320203 => "无锡市南长区",
  	320204 => "无锡市北塘区",
  	320205 => "无锡市锡山区",
  	320206 => "无锡市惠山区",
  	320211 => "无锡市郊区",
  	320212 => "无锡市马山区",
  	320219 => "无锡市江阴县",
  	320221 => "无锡市江阴县",
  	320222 => "无锡市无锡县",
  	320223 => "无锡市宜兴县",
  	320281 => "无锡市江阴市",
  	320282 => "无锡市宜兴市",
  	320283 => "无锡市锡山市",
  	320301 => "徐州市市辖区",
  	320302 => "徐州市鼓楼区",
  	320303 => "徐州市云龙区",
  	320304 => "徐州市九里区",
  	320305 => "徐州市贾汪区",
  	320311 => "徐州市泉山区",
  	320321 => "徐州市丰县",
  	320322 => "徐州市沛县",
  	320323 => "徐州市铜山县",
  	320324 => "徐州市睢宁县",
  	320325 => "徐州市邳县",
  	320326 => "徐州市新沂县",
  	320381 => "徐州市新沂市",
  	320382 => "徐州市邳州市",
  	320401 => "常州市市辖区",
  	320402 => "常州市天宁区",
  	320404 => "常州市钟楼区",
  	320405 => "常州市戚墅堰区",
  	320411 => "常州市郊区",
  	320412 => "常州市武进区",
  	320419 => "常州市武进市",
  	320421 => "常州市武进县",
  	320422 => "常州市金坛县",
  	320423 => "常州市溧阳县",
  	320481 => "常州市溧阳市",
  	320482 => "常州市金坛市",
  	320483 => "常州市武进市",
  	320501 => "苏州市市辖区",
  	320502 => "苏州市沧浪区",
  	320503 => "苏州市平江区",
  	320504 => "苏州市金阊区",
  	320505 => "苏州市虎丘区",
  	320506 => "苏州市吴中区",
  	320507 => "苏州市相城区",
  	320511 => "苏州市郊区",
  	320520 => "苏州市常熟市",
  	320521 => "苏州市沙洲县",
  	320522 => "苏州市太仓县",
  	320523 => "苏州市昆山县",
  	320524 => "苏州市吴县",
  	320525 => "苏州市吴江县",
  	320581 => "苏州市常熟市",
  	320582 => "苏州市张家港市",
  	320583 => "苏州市昆山市",
  	320584 => "苏州市吴江市",
  	320585 => "苏州市太仓市",
  	320586 => "苏州市吴县市",
  	320601 => "南通市市辖区",
  	320602 => "南通市崇川区",
  	320611 => "南通市港闸区",
  	320621 => "南通市海安县",
  	320622 => "南通市如皋县",
  	320623 => "南通市如东县",
  	320624 => "南通市南通县",
  	320625 => "南通市海门县",
  	320626 => "南通市启东县",
  	320681 => "南通市启东市",
  	320682 => "南通市如皋市",
  	320683 => "南通市通州市",
  	320684 => "南通市海门市",
  	320701 => "连云港市市辖区",
  	320703 => "连云港市连云区",
  	320704 => "连云港市云台区",
  	320705 => "连云港市新浦区",
  	320706 => "连云港市海州区",
  	320721 => "连云港市赣榆县",
  	320722 => "连云港市东海县",
  	320723 => "连云港市灌云县",
  	320724 => "连云港市灌南县",
  	320801 => "淮安市市辖区",
  	320802 => "淮安市清河区",
  	320803 => "淮安市楚州区",
  	320804 => "淮安市淮阴区",
  	320811 => "淮安市清浦区",
  	320819 => "淮安市宿迁市",
  	320821 => "淮安市淮阴县",
  	320822 => "淮安市灌南县",
  	320823 => "淮安市沭阳县",
  	320824 => "淮安市宿迁县",
  	320825 => "淮安市泗阳县",
  	320826 => "淮安市涟水县",
  	320827 => "淮安市泗洪县",
  	320828 => "淮安市淮安县",
  	320829 => "淮安市洪泽县",
  	320830 => "淮安市盱眙县",
  	320831 => "淮安市金湖县",
  	320881 => "淮安市宿迁市",
  	320882 => "淮安市淮安市",
  	320901 => "盐城市市辖区",
  	320902 => "盐城市城区",
  	320903 => "盐城市盐都区",
  	320911 => "盐城市郊区",
  	320919 => "盐城市东台市",
  	320921 => "盐城市响水县",
  	320922 => "盐城市滨海县",
  	320923 => "盐城市阜宁县",
  	320924 => "盐城市射阳县",
  	320925 => "盐城市建湖县",
  	320926 => "盐城市大丰县",
  	320927 => "盐城市东台县",
  	320928 => "盐城市盐都县",
  	320981 => "盐城市东台市",
  	320982 => "盐城市大丰市",
  	321001 => "扬州市市辖区",
  	321002 => "扬州市广陵区",
  	321003 => "扬州市邗江区",
  	321011 => "扬州市郊区",
  	321019 => "扬州市仪征市",
  	321020 => "扬州市泰州市",
  	321021 => "扬州市兴化县",
  	321022 => "扬州市高邮县",
  	321023 => "扬州市宝应县",
  	321024 => "扬州市靖江县",
  	321025 => "扬州市泰兴县",
  	321026 => "扬州市江都县",
  	321027 => "扬州市邗江县",
  	321028 => "扬州市泰县",
  	321029 => "扬州市仪征县",
  	321081 => "扬州市仪征市",
  	321082 => "扬州市泰州市",
  	321083 => "扬州市兴化市",
  	321084 => "扬州市高邮市",
  	321085 => "扬州市泰兴市",
  	321086 => "扬州市靖江市",
  	321087 => "扬州市江都市",
  	321088 => "扬州市江都市",
  	321101 => "镇江市市辖区",
  	321102 => "镇江市京口区",
  	321111 => "镇江市润州区",
  	321112 => "镇江市丹徒区",
  	321119 => "镇江市丹阳市",
  	321121 => "镇江市丹徒县",
  	321122 => "镇江市丹阳县",
  	321123 => "镇江市句容县",
  	321124 => "镇江市扬中县",
  	321181 => "镇江市丹阳市",
  	321182 => "镇江市扬中市",
  	321183 => "镇江市句容市",
  	321201 => "泰州市市辖区",
  	321202 => "泰州市海陵区",
  	321203 => "泰州市高港区",
  	321281 => "泰州市兴化市",
  	321282 => "泰州市靖江市",
  	321283 => "泰州市泰兴市",
  	321284 => "泰州市姜堰市",
  	321301 => "宿迁市市辖区",
  	321302 => "宿迁市宿城区",
  	321311 => "宿迁市宿豫区",
  	321321 => "宿迁市宿豫县",
  	321322 => "宿迁市沭阳县",
  	321323 => "宿迁市泗阳县",
  	321324 => "宿迁市泗洪县",
  }
end
module CEEStats
  YEAR = 13
  
  IDs = lambda { |data|
    result = {}
    data.keys.select{ |i| i / 10000 == 32}.each{ |i|
      result[i] = data[i]
    }
    result
  }.call(ChinaIdentify::DATA)
  
  Subjects = {
    45 => "物理、化学",
    47 => "物理、地理",
    48 => "物理、政治",
    49 => "物理、生物",
    65 => "历史、化学",
    67 => "历史、地理",
    68 => "历史、政治",
    69 => "历史、生物",
    00 => "不参加选修科目考试",
  }
  
  def self.exist?(prefix, num)
    id = sprintf("%s%04d", prefix, num)
    print "检查 #{id}..."
    uri = URI.parse("http://202.102.112.50/GenerateWj.do")
    https = Net::HTTP.new(uri.host, uri.port)
    req = Net::HTTP::Post.new(uri.path)
    req.body = "ksh=#{id}"
    res = https.request(req)
    result = res.body.force_encoding("utf-8")
    r = result[/不存在/] ? false : true
    puts r ? "存在" : "不存在"
    r
  end
  
  def self.test(prefix)
    has = exist?(prefix, 1)
    if has
      results = Hash.new{|hash, i| hash[i] = exist?(prefix, i) if i <= 9999 && i >= 1}
      results[1] = true
      last = 9999
      i = 5000
      size = 5000
      loop do
        break if results[i] == true && results[i + 1] == false
        size /= 2
        size = 1 if size < 1
        if results[i]
          i += size
        else
          i -= size
        end
        i = 9999 if i > 9999
        i = 1 if i < 1
      end
      puts "#{prefix} 号段存在考生 #{i} 位。"
      return i
    else
      puts "#{prefix} 号段不存在任何考生。"
      return 0
    end
  end
  
  def self.run
    prefixs = IDs.keys.product(Subjects.keys).map{|i|sprintf("%02d%06d%02d", YEAR, *i)}
    Dir.mkdir "results" rescue nil
    prefixs.each do |i|
      unless File.exist? fn="results/#{i}"
        result = test(i)
        unless result.nil?
          open fn, "wb" do |io| io.write result.to_s end
        end
      end
    end
  end
end

CEEStats.run